# -*- coding: utf-8 -*-
"""# 1644

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bvSey8IRKtQMM5Wy3CjYeIGQQzHTy52s
"""

# 1644 소수의 연속합
N = int(input())

# 에라토스테네스의 체 
eratos = [True] * (N+1)

for i in range(2, int(N**0.5) + 1):
    if eratos[i]:
        for j in range(2*i, N+1, i):
            eratos[j] = False

primes = [i for i in range(2,N+1) if eratos[i]] # N까지의 소수는 다 구했다.


answer = 0
# 투 포인터
start = 0
end = 0
while end <= len(primes):
    sum_prime = sum(primes[start:end]) # 투 포인터로 슬라이싱해서 합 구함
    if sum_prime == N: # 연속된 소수의 합으로 나타난 경우
        answer += 1 
        end += 1 
    elif sum_prime < N: # 합이 더 작은 경우
        end += 1
    else: # 합이 더 큰 경우
        start += 1

print(answer)