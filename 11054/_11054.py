# -*- coding: utf-8 -*-
"""# 11054

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KPrfRYMWS_kWlF77BPs2dXkOo7stfY8z
"""

# 11054 가장 긴 바이토닉 부분 수열
N = int(input())
seq = list(map(int, input().split()))

# initialization
dseq  = seq[::-1] # 쓸려고 만든 역순 
iSubseq = [1 for _ in range(N)] # 증가하는 부분 수열
dSubseq = [1 for _ in range(N)] # 감소하는 부분 수열
ans = [0 for _ in range(N)] # 증가 부분 수열 감소 부분 수열 합해서 답 구할 리스트

# Solution
for i in range(N):
    for j in range(i):
        if seq[j] < seq[i]:
            iSubseq[i] = max(iSubseq[i], iSubseq[j]+1)
        if dseq[j] < dseq[i]:
            dSubseq[i] = max(dSubseq[i], dSubseq[j]+1)

for i in range(N):
    ans[i] = iSubseq[i] + dSubseq[N-(i+1)] - 1 # 중복 1 빼주기

print(max(ans))