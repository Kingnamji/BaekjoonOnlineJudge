# -*- coding: utf-8 -*-
"""# 25178

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ku9KSCgMC7q4z7Zda3DIZiGdsOKFLpPn
"""

# 25178 두라무리 휴지
N = int(input())
A = input()
B = input()

def idxAEIOU(c):
    if c == 'a':
        return 1
    elif c == 'e':
        return 2
    elif c == 'i':
        return 3
    elif c == 'o':
        return 4
    elif c == 'u':
        return 5
    else: # 자음 
        return 0

def checkDuramuri(A, B):
    # 1. 문자열의 첫 글자, 마지막 글자
    if A[0] != B[0] or A[-1] != B[-1]: 
        return "NO"
    
    # 2. 나머지 조건
    cnt = [0 for _ in range(5)] # aeiou
    # 모음 제거 후 자음만 남길 A, B
    new_A = ""
    new_B = ""

    for i in range(N):
        # 한글자씩 순회
        idx_A = idxAEIOU(A[i])
        idx_B = idxAEIOU(B[i])    

        if idx_A: # A[i]가 모음인 경우
            cnt[idx_A-1] += 1 # 해당 모음의 개수 +
        else: # A[i]가 자음인 경우
            new_A += A[i]

        if idx_B: # B[i]가 모음인 경우
            cnt[idx_B-1] -= 1
        else: # B[i]가 자음인 경우
            new_B += B[i]
            
    # 2-1, 각 모음의 수
    for i in cnt:
        if i != 0: # +-해서 0 아니면 모음 수 다름 => 재배열 X
            return "NO"

    # 2-2, 모음 제거 후 자음끼리 비교
    if new_A != new_B:
        return "NO"

    # 위 조건에서 NO가 모두 아닌 경우
    return "YES"

print(checkDuramuri(A, B))