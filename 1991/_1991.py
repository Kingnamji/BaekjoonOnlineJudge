# -*- coding: utf-8 -*-
"""# 1991

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wMdWazO8ltgXAGqhskWs3EpG5Jw5QT-E
"""

# 1991 트리 순회

class Node:
    def __init__(self, root, left, right):
        self.root = root
        self.left = left
        self.right = right

def preorder(node): # VLR
    print(node.root, end='')

    if node.left != '.':
        preorder(tree[node.left])
    if node.right != '.':
        preorder(tree[node.right])

def inorder(node): # LVR
    if node.left != '.':
        inorder(tree[node.left])

    print(node.root, end='')

    if node.right != '.':
        inorder(tree[node.right])

def postorder(node): # LRV
    if node.left != '.':
        postorder(tree[node.left])
    if node.right != '.':
        postorder(tree[node.right])

    print(node.root, end='')

N = int(input())
tree = {}

for _ in range(N):
    root, left, right = map(str, input().split())
    tree[root] = Node(root, left, right)

preorder(tree['A'])
print()
inorder(tree['A'])
print()
postorder(tree['A'])