# -*- coding: utf-8 -*-
"""# 11724

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k4lY3P6eULxrKx_QhRwcXvsOf433erDU
"""

# 11724 연결 요소의 개수
import sys
sys.setrecursionlimit(10**6)
# DFS 구현
def DFS(graph, start, visited):
    visited[start] = True

    for i in graph[start]:
        if not visited[i]:
            DFS(graph, i, visited)

# Solution
N, M = map(int, input().split())
cnt = 0 # Connected Component 개수

# 그래프 관련 변수
G = [[] for _ in range(N+1)]
G[0] = [0,0]
visited = [False for _ in range(N+1)]

for _ in range(M):
    u, v = map(int, sys.stdin.readline().split()) # Vertex
    G[u].append(v)
    G[v].append(u)

for i in range(1, N+1):
    if visited[i] == False:
        cnt += 1
        DFS(G, i, visited)

print(cnt)