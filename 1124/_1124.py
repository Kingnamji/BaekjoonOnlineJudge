# -*- coding: utf-8 -*-
"""# 1124

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yg7rjIK9ORqjvGnT9_SB2YnhZlC9S3nN
"""

# 1124 언더프라임
A, B = map(int, input().split())
cnt = 0 # 개수 출력

# 에라토스테네스의 체 사용 (범위까지 소수 다 확인)
eratos = [1 for _ in range(100001)]
eratos[1] = 0

last = 100001 ** 0.5
for i in range(2, int(last) + 1):
    if eratos[i]:
        for j in range(2 * i, 100001, i):
            eratos[j] = 0

# B까지 다 구하는 과정
nums = [0 for _ in range(B+1)]

for i in range(1, B+1):
    if eratos[i]: # 소수는 다 소인수 분해 개수 1
        nums[i] = 1 

for i in range(2, B+1):
    for j in range(2, B+1):
        if i * j > B:
            break
        if eratos[j]: # j가 소수일 경우
            nums[i*j] = nums[i] + 1 # i*j는 i의 갯수 + 1

# 구한 소수 개수 바탕으로
for i in range(A, B+1):
    if eratos[nums[i]]: # 에라토스테네스의 체에 적용하면 소수 개인지 아닌지 확인 가능 
        cnt += 1

print(cnt)