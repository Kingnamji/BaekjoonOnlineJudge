# -*- coding: utf-8 -*-
"""# 1021

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b8I88WTRgOA5bJj8LINBleaObB0lchby
"""

# 1021 회전하는 큐
N, M = map(int, input().split())
idx_list = list(map(int,input().split())) # 뽑아내려고 하는 수의 위치
queue = [i for i in range(1,N+1)] # 연산 전의 큐
cnt = 0 # 연산의 수

for i in range(M):
    idx = queue.index(idx_list[i])
    
    if idx < len(queue) - idx:
        while 1:
            if queue[0] == idx_list[i]:
                del queue[0]
                break
            else:
                queue.append(queue[0])
                del queue[0]
                cnt += 1
    else:
        while 1:
            if queue[0] == idx_list[i]:
                del queue[0]
                break
            else:
                queue.insert(0, queue[-1])
                del queue[-1]
                cnt += 1
        
print(cnt)