# -*- coding: utf-8 -*-
"""# 14502

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NNg4g_KI6ieGYkLVcUPO_JqvUBQSjIe9
"""

# 14502 연구소
from copy import deepcopy
import sys
input = sys.stdin.readline

def wall(start, cnt): # 벽 3개 만들기.
    global safe 

    if cnt == 3 : # 벽 3개 만들면
        test_space = deepcopy(space)
        for i in range(len(virus)):
            r, c = virus[i]
            dfs(r, c, test_space)
        zeros = sum(i.count(0) for i in test_space) # 안전 영역(0) 수 
        safe = max(safe, zeros) 
    else :
        for i in range(start, N*M): # 벽 경우의 수
            r = i // M # 0 ~ N - 1
            c = i % M # 0 ~ M - 1
            if space[r][c] == 0 : # 안전 영역
                space[r][c] = 1 # 벽
                wall(i,cnt+1) # 벽선택
                space[r][c] = 0 # 다시 없애준다.
 
 
def dfs(r,c, test_space):
    if test_space[r][c] == 2: # 바이러스 on
        for i in range(4): # 상 하 좌 우
            new_row = r+row[i]
            new_col = c+col[i]
            if (new_row >= 0 and new_col >=0) and (new_row < N and new_col < M) : # 연구실 내
                if test_space[new_row][new_col] == 0 : # 벽 아님
                    test_space[new_row][new_col] = 2
                    dfs(new_row,new_col,test_space)

N, M = map(int, input().split())
safe = 0 # 안전 영역 수

# 방향 상 하 좌 우 순
row = [1, -1, 0, 0]
col = [0, 0, -1, 1]

# 지도 및 virus의 위치
space = []
for _ in range(N):
    space.append(list(map(int,input().split())))

virus = []
for i in range(N):
    for j in range(M):
        if space[i][j] == 2:
            virus.append((i,j))

wall(0, 0)
print(safe)