# -*- coding: utf-8 -*-
"""# 1260

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DfZNQwK7ZAjEXgXn3HjXkNMR8Geff95H
"""

# 1260 DFS와 BFS
import sys

def dfs(V): # 재귀적으로
    visited[V] = True
    print(V, end=' ')
    for i in range(1,N+1):
        if not visited[i] and graph[V][i] == 1:
            dfs(i)

def bfs(V): # queue를 사용
    visited[V] = False
    queue = [V]
    while queue:
        V = queue.pop(0)
        print(V, end=' ')
        for i in range(1, N+1):
            if visited[i] and graph[V][i] == 1:
                queue.append(i)
                visited[i] = False

N,M,V = map(int, input().split())
graph = [[0]*(N+1) for _ in range(N+1)]
visited = [False] * (N+1) # 방문 기록

for _ in range(M): # edges
    v1, v2 = map(int, sys.stdin.readline().split())
    graph[v1][v2] = 1
    graph[v2][v1] = 1

dfs(V)
print()
bfs(V)