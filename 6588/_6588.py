# -*- coding: utf-8 -*-
"""# 6588

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cmMmPAI42e7gl4Td1nMrJUcHJdFtI0f9
"""

# 6588 골드바흐의 추측
import sys

def isPrime(num):
    i = 2
    # a는 반드시 3 이상 이므로 1, 2 등의 케이스는 모두 제외
    while i <= num**0.5:
        if num % i == 0:
            return False
        i += 1
    
    return True

N = int(input())

while N != 0:
    a = 3
    b = N - a
    while a < N:
        if isPrime(a) and isPrime(b):
            print(f'{N} = {a} + {b}')
            break;
        else:
            a += 2
            b -= 2

    N = int(sys.stdin.readline())

def isPrime(num):
    i = 2
    # a는 반드시 3 이상
    '''
    if num == 1:
      return False
    elif num == 2:
        return True
        
    else:
        '''
    while i < num**0.5:
        if num % i == 0:
            return False
        i += 1
    
    return True

isPrime(37)